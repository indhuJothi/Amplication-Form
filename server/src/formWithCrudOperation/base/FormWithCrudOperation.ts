/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumFormWithCrudOperationCountries } from "./EnumFormWithCrudOperationCountries";
import { IsEnum, IsDate, IsString, IsOptional, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { EnumFormWithCrudOperationGender } from "./EnumFormWithCrudOperationGender";
@ObjectType()
class FormWithCrudOperation {
  @ApiProperty({
    required: true,
    enum: EnumFormWithCrudOperationCountries,
  })
  @IsEnum(EnumFormWithCrudOperationCountries)
  @Field(() => EnumFormWithCrudOperationCountries, {
    nullable: true,
  })
  countries?: "India" | "America" | "Germany" | "Australia";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: true,
    enum: EnumFormWithCrudOperationGender,
    isArray: true,
  })
  @IsEnum(EnumFormWithCrudOperationGender, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumFormWithCrudOperationGender], {
    nullable: true,
  })
  gender?: Array<"Male" | "Female">;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastName!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  mobileNumber!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { FormWithCrudOperation };
